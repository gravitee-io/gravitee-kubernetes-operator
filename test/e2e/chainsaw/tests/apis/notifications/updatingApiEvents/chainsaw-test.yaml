# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: update-notification-events
spec:
  scenarios:
    # Feature not yet supported in v2
    # - bindings:
    #     - name: apiVersion
    #       value: v2
    #     - name: apiVersionK8s
    #       value: apidefinitions.gravitee.io
    #     - name: apiKind
    #       value: ApiDefinition
    - bindings:
        - name: apiVersion
          value: v4
        - name: apiVersionK8s
          value: apiv4definitions.gravitee.io
        - name: apiKind
          value: ApiV4Definition
  bindings:
    - name: apiName
      value: (join('-', [$apiVersion, $test.metadata.name]))
    - name: commandDir
      value: "../../../../../lib/commands"
    - name: gkoNamespace
      value: default
    - name: exportedApiYaml
      value: (concat($apiVersion, '-exportedApi.yaml'))

    - name: groupName
      value: (concat('group-for-', $apiName))
    - name: service_account_name
      value: (concat('service-account-for-', $apiName))


  steps:
  - name: Create a new service account
    use:
      template: ../../../../stepTemplates/createServiceAccount.yaml
      
  - name: Create a new Group resource
    try:
      - create:
          file: resources/group.yaml

  - name: Create a new Notification resource
    try:
      - create:
          file: resources/notification-with-groups.yaml
          
  - name: Create API with notifications and groups
    use:
      template: ../../../../stepTemplates/createApi.yaml
      with:
        bindings:
          - name: apiCrdFile
            value: (join('', ['resources/', $apiVersion, '-api-with-notification.yaml']))

  - name: Update Notification resource
    try:
      - apply:
          file: resources/notification-with-groups-and-added-event.yaml

  - name: Export and assert Notification settings
    try:
      - script:
          env:
            - name: COMMAND_DIR
              value: ($commandDir)
            - name: API_NAME
              value: ($apiName)
            - name: GROUP_NAME
              value: ($groupName)
            - name: RESOURCE_NAMESPACE
              value: ($namespace)
            - name: API_VERSION_K8S
              value: ($apiVersionK8s)
          content: |
            set -e
            API_ID=$(kubectl get $API_VERSION_K8S -n $RESOURCE_NAMESPACE $API_NAME -o jsonpath='{.status.id}')
            GROUP_ID=$(kubectl get groups.gravitee.io -n $RESOURCE_NAMESPACE $GROUP_NAME -o jsonpath='{.status.id}')
            ALL_API_NOTIFICATIONS=$(npx --yes --quiet zx $COMMAND_DIR/getApiNotifications.mjs --api_id $API_ID)

            # Extract the PORTAL notification object from the output
            PORTAL_NOTIFICATION=$(echo "$ALL_API_NOTIFICATIONS" | jq -c '.[] | select(.config_type=="PORTAL")')

            # Emit a single JSON object so Chainsaw can json_parse($stdout) once
            echo "{\"apiId\":\"$API_ID\",\"groupId\":\"$GROUP_ID\",\"notification\":$PORTAL_NOTIFICATION}"
            # npx --yes --quiet zx $COMMAND_DIR/checkApiNotificationHooks.mjs --api_id $API_ID --expect name="Console Notification" --expect-array-equals hooks=API_STARTED,API_STOPPED
          outputs:
            - name: notification
              value: (json_parse($stdout).notification)
            - name: api_id
              value: (json_parse($stdout).apiId)
            - name: group_id
              value: (json_parse($stdout).groupId)
      - assert:
          resource:
            ($notification):
              referenceType: API
              referenceId: ($api_id)
              hooks:
                - API_STARTED
                - API_STOPPED
                - APIKEY_EXPIRED
              groups:
                - ($group_id)
              origin: KUBERNETES
              config_type: PORTAL
