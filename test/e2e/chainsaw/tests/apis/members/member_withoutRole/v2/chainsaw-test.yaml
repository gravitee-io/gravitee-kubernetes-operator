# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: member-without-role-v2
spec:
  bindings:
    - name: apiName
      value: member-without-role-v2
    - name: service_account_name
      value: service-account-for-member-without-role-v2
    - name: commandDir
      value: "../../../../../commands"
    - name: gkoNamespace
      value: default
    - name: exportedApiYaml
      value: exportedApi.yaml  

  steps:
  - name: remove-pre-existing-service-account
    try:
      - script:
          env:
            - name: COMMAND_DIR
              value: ($commandDir)
            - name: SERVICE_ACCOUNT_NAME
              value: ($service_account_name)
          content: |
            npx zx $COMMAND_DIR/deleteServiceAccount.mjs --name "$SERVICE_ACCOUNT_NAME"

  - name: create-new-service-account
    try:
      - script:
          env:
            - name: COMMAND_DIR
              value: ($commandDir)
            - name: SERVICE_ACCOUNT_NAME
              value: ($service_account_name)
          content: |
            npx zx $COMMAND_DIR/createServiceAccount.mjs --name $SERVICE_ACCOUNT_NAME
          check:
              ($error): ~
              (contains($stdout, '@graviteesource.com')): true
    catch:
      - podLogs:
          selector: "app.kubernetes.io/component=api"
          namespace: ($gkoNamespace)
  
  - name: create-api-with-new-member-without-role
    try:
      - apply:
          file: member-without-role-v2.yaml
    catch:
      - podLogs:
          selector: "app.kubernetes.io/component=api"
          namespace: ($gkoNamespace)

  - name: verify-api-has-default-member-role
    try:
      - assert:
          file: assert-default-member-role.yaml

  - name: export-api-as-yaml
    try:
      - sleep:
          duration: 5s
      - script:
          env:
            - name: COMMAND_DIR
              value: ($commandDir)
            - name: API_NAME
              value: ($apiName)
            - name: RESOURCE_NAMESPACE
              value: ($namespace)
            - name: EXPORTED_API_YAML
              value: ($exportedApiYaml)
          content: |
            API_ID=$(kubectl get apidefinitions.gravitee.io -n $RESOURCE_NAMESPACE $API_NAME -o jsonpath='{.status.id}')
            npx zx $COMMAND_DIR/exportApiAsYaml.mjs --api_id $API_ID --api_version v2 > $EXPORTED_API_YAML
    catch:
      - podLogs:
          selector: "app.kubernetes.io/component=api"
          namespace: ($gkoNamespace)

  - name: assert-export-for-removed-member
    try:
      - script:
          env:
            - name: SERVICE_ACCOUNT_NAME
              value: ($service_account_name)
            - name: EXPORTED_API_YAML
              value: ($exportedApiYaml)
          content: |
            echo "MEMBER_ROLE=$(yq '.spec.members[0].role' "$EXPORTED_API_YAML")"
            rm -f "$EXPORTED_API_YAML"
          check:
            (contains($stdout, 'MEMBER_ROLE=USER')): true