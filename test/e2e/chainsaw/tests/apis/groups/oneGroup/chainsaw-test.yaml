# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: api-with-one-group
spec:
  scenarios:
    - bindings:
        - name: apiVersion
          value: v2
        - name: apiVersionK8s
          value: apidefinitions.gravitee.io
        - name: apiKind
          value: ApiDefinition
    - bindings:
        - name: apiVersion
          value: v4
        - name: apiVersionK8s
          value: apiv4definitions.gravitee.io
        - name: apiKind
          value: ApiV4Definition
  bindings:
    - name: apiName
      value: (join('-', [$apiVersion, $test.metadata.name]))
    - name: apiCrdFile
      value: (join('', ['resources/', $apiName,'.yaml']))
    - name: commandDir
      value: "../../../../../lib/commands"
    - name: gkoNamespace
      value: default

    - name: service_account_name
      value: (concat('service-account-for-', $apiName))
    - name: groupName
      value: (concat('group-for-', $apiName))


  steps:
  - name: Create a new service account
    use:
      template: ../../../../stepTemplates/createServiceAccount.yaml

  - name: Create Group with newly created member
    try:
      - create:
          file: (join('', ['resources/', $apiVersion, '-group.yaml']))
      - wait:
          apiVersion: gravitee.io/v1alpha1
          kind: Group
          name: ($groupName)
          for:
            condition:
              name: Accepted
              value: "True"

  - name: Create API with newly created group
    use:
      template: ../../../../stepTemplates/createApi.yaml

  - name: Assert exported API for created group
    use:
      template: ../../../../stepTemplates/exportApiAndAssert.yaml
      with:
        bindings:
          - name: assertArgs
            value:
              - (concat('--assert spec.groups:', $groupName))
