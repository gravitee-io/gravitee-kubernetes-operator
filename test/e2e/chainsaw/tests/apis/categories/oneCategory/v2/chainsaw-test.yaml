# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: v2-api-with-one-category
spec:
  bindings:
    - name: apiName
      value: v2-api-with-one-category
    - name: service_account_name
      value: service-account-for-v2-api-with-one-category-test
    - name: commandDir
      value: "../../../../../commands"
    - name: gkoNamespace
      value: default
    - name: exportedApiYaml
      value: exportedApi.yaml  
    - name: categoryName
      value: category-for-v2-api-with-one-category-test

  steps:
  - name: Create a new category
    use:
      template: ../../../../../stepTemplates/createCategory.yaml

  - name: Create API with newly created category
    use:
      template: ../../../../../stepTemplates/createV2Api.yaml
      with:
        bindings:
          - name: file
            value: v2-api-with-one-category.yaml

  - name: Export API as YAML
    try:
      - script:
          env:
            - name: COMMAND_DIR
              value: ($commandDir)
            - name: API_NAME
              value: ($apiName)
            - name: RESOURCE_NAMESPACE
              value: ($namespace)
            - name: EXPORTED_API_YAML
              value: ($exportedApiYaml)
          content: |
            API_ID=$(kubectl get apidefinitions.gravitee.io -n $RESOURCE_NAMESPACE $API_NAME -o jsonpath='{.status.id}')
            npx zx $COMMAND_DIR/exportApiAsYaml.mjs --api_id $API_ID --api_version v2 > $EXPORTED_API_YAML

  - name: Assert exported API for created category
    try:
      - script:
          env:
            - name: SERVICE_ACCOUNT_NAME
              value: ($service_account_name)
            - name: EXPORTED_API_YAML
              value: ($exportedApiYaml)
            - name: CATEGORY_NAME
              value: ($categoryName)
          content: |
            if ! yq -e '.spec.categories[]' "$EXPORTED_API_YAML" | grep -Fxq "$CATEGORY_NAME"; then
              echo "category \"$CATEGORY_NAME\"not found in exported API"
              exit 1
            fi
            rm "$EXPORTED_API_YAML"
