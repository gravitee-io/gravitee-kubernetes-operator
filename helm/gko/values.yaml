# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## @section RBAC
## @descriptionStart
## Required RBAC resources are created by default for all components involved in the release.
## @descriptionEnd
serviceAccount:
  ## @param serviceAccount.create Specifies if a service account should be created for the manager pod.
  create: true
  ## @param serviceAccount.name Specifies the service account name to use.
  name: gko-controller-manager

rbac:
  ## @param rbac.create Specifies if RBAC resources should be created.
  create: true
  ## @param rbac.skipClusterRoles Specifies if cluster roles should be created when RBAC resources are created.
  skipClusterRoles: false

## @section Controller Manager
## @descriptionStart
## This is where you can configure the deployment itself and the way the operator will interact with APIM and Custom Resources in your cluster.
## @descriptionEnd
manager:
  ## @param manager.annotations Specifies custom annotations to be added to the manager deployment and pod.
  annotations: {}
  ## @param manager.labels Specifies custom labels to be added to the manager deployment and pod.
  labels: {}
  image:
    ## @param manager.image.repository Specifies the docker registry and image name to use.
    repository: graviteeio/kubernetes-operator
    ## @param manager.image.tag Specifies the docker image tag to use. If no value is set, the chart version will be used.
    tag: ""
    ## @param manager.image.pullPolicy Specifies the pullPolicy to use when starting a new container
    pullPolicy: IfNotPresent
    ## @param manager.image.pullSecret Specifies the secret holding the credentials used to pull image from the registry
    pullSecret: {}
<<<<<<< HEAD
=======
  pod:
    ## @param manager.pod.securityContext Specifies the security context that will apply to all containers running within the pod
    securityContext: {}
    ## @param manager.pod.nodeSelector Specifies a set of labels to be used to select on which node the manager pod should be scheduled.
    nodeSelector: {}
  container:
    ## @param manager.container.securityContext Specifies the security context that will apply to the controller manager container.
    securityContext: {}
>>>>>>> 5cf8a69 (feat: allow to set node selector through helm values)
  logs:
    ## @param manager.logs.json Whether to output manager logs in JSON format.
    ## ðŸ‘Ž This value is deprecated in benefit of manager.logs.format
    json: true
    ## @param manager.logs.format Specifies log output format. Can be either json or console.
    format: json
    ## @param manager.logs.level Specifies log level. Can be either debug, info, warn, or error. Wrong values are converted to `info`.
    level: info
    ## @param manager.logs.levelCase Specifies the case of the level value. Can be either lower or upper. Wrong values are converted to `upper`.
    levelCase: upper
    timestamp:
      ## @param manager.logs.timestamp.field Specifies the name of the field to use for the timestamp.
      field: timestamp
      ## @param manager.logs.timestamp.format Specifies the format to use for the timestamp. Can be either iso-8601, epoch-second, epoch-millis or epoch-nano.
      ## Wrong values are converted to `iso-8601`.
      format: epoch-second
  configMap:
    ## @param manager.configMap.name The name of the config map used to set the manager config from this values.
    name: gko-config
  resources:
    limits:
      ## @param manager.resources.limits.cpu The CPU resources limits for the GKO Manager container
      cpu: 500m
      ## @param manager.resources.limits.memory The memory resources limits for the GKO Manager container
      memory: 256Mi
    requests:
      ## @param manager.resources.requests.cpu The requested CPU for the GKO Manager container
      cpu: 50m
      ## @param manager.resources.requests.memory The requested memory for the GKO Manager container
      memory: 128Mi
  ## @param manager.tolerations Set pods tolerations. Please see https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ about this topic. 
  tolerations: []
  ## @param manager.hostNetwork Use the host's network namespace. Please see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#hosts-namespaces about this topic. 
  hostNetwork: false
  scope:
    ## @param manager.scope.cluster Use false to listen only in the release namespace.
    cluster: true
    ## @param manager.scope.namespaces Setting this list of namespaces will result in the operator listening only in this namespaces.
    namespaces: []
  ## @param manager.applyCRDs If true, the manager will patch Custom Resource Definitions on startup.
  ## Please be aware that this will apply to Custom Resource Definitions 
  ## (which are the Open API model for Custom Resources such as API Definitions), 
  ## not to Custom Resources themselves.
  ## Custom Resources will be reconciled if the manager restarts whatever the value
  ## of this flag is. Because helm upgrades do not update CRDs once they have been
  ## installed, it is recommended to set this flag to true.
  applyCRDs: true
  reconcile:
    ## @param manager.reconcile.strategy The strategy used by the operator to decide wether a resource should be reconciled on not. The strategy can be either `onSpecChange` or `always`. Other values will falback to `onSpecChange`.
    ## If the strategy is `onSpecChange` (which is the default), the operator
    ## will compute a hash of the spec field of the resource an discard reconciles if the hash is known. The previous calculated hash is
    ## is stored in the `gravitee.io/last-spec-hash` annotation.
    strategy: onSpecChange
  metrics:
    ## @param manager.metrics.enabled If true, a metrics server will be created so that metrics can be scraped using prometheus.
    enabled: true
    ## @param manager.metrics.port Which port the metric server will bind to.
    port: 8080
    ## @param manager.metrics.secured If true, the metrics will be served over TLS.
    secured: true
    ## @param manager.metrics.certDir The directory where the TLS certificate and key will be stored. If empty, a self signed certificate will be generated.
    certDir: ""
    prometheus:
      instance:
        ## @param manager.metrics.prometheus.instance.create If true, a prometheus 
        create: false
      monitor:
        ## @param manager.metrics.prometheus.monitor.create If true, a service monitor will be created for the metrics server (requires the prometheus operator to be installed on the cluster). 
        create: false
        ## @param manager.metrics.prometheus.monitor.insecureSkipCertVerify If true, the service monitor will not verify the certificate used by the metrics server.
        insecureSkipCertVerify: true
  probes:
     ## @param manager.probes.port Which port the readiness and liveness probes will listen to.
    port: 8081
  httpClient:
    ## @param manager.httpClient.insecureSkipCertVerify If true, the manager HTTP client will not verify the certificate used by the Management API.
    insecureSkipCertVerify: false
    ## @param manager.httpClient.timeoutSeconds he timeout (in seconds) used when issuing request to the Management API.
    timeoutSeconds: 5
  webhook:
    ## @param manager.webhook.enabled If true, the manager will register a webhook server operating on custom resources.
    enabled: true
    configuration:
      ## @param manager.webhook.configuration.validatingName The name of ValidatingWebhookConfiguration resource created to access the validation controller.
      validatingName: gko-validating-webhook-configurations
      ## @param manager.webhook.configuration.mutatingName The name of MutatingWebhookConfiguration resource created to access the mutation controller.
      mutatingName: gko-mutating-webhook-configurations
      ## @param manager.webhook.configuration.useAutoUniqueNames If true each install will take care on prefixing the validating and mutating configuration names with the service account name. This allows deploying one operator per namespace, each using their own service account and webhook configurations. This should not be set to true if manager.scope.cluster=true
      useAutoUniqueNames: false
    service:
      ## @param manager.webhook.service.name The service used to expose the webhook server.
      name: gko-webhook
      ## @param manager.webhook.service.port Which port the webhook server will listen to.
      port: 9443
    cert:
      ## @param manager.webhook.cert.create If true, a secret will be created to store the webhook server certificate.
      create: true
      secret:
        ## @param manager.webhook.cert.secret.name The name of the secret storing the webhook server certificate.
        name: gko-webhook-cert
    admission:
      ## @param manager.webhook.admission.checkApiContextPathConflictInCluster check if the same API context path exists in the whole cluster.
      checkApiContextPathConflictInCluster: false
  templating:
    ## @param manager.templating.enabled If `false` string [templating](https://documentation.gravitee.io/gravitee-kubernetes-operator-gko/guides/templating) is not evaluated on resources and template markers will remain untouched.
    enabled: true

## @section ingress
## @descriptionStart
## Configure the behavior of the ingress controller.
## 
## When storing templates stored in config maps, the config map should contain a content key and a contentType key e.g.
## ```yaml
##   content: '{ "message": "Not Found" }'
##   contentType: application/json
## ```
## @descriptionEnd
ingress:
  controller:
    ## @param ingress.controller.enabled indicates if GKO ingress controller is enabled or not
    enabled: true
  ## @param ingress.ingressClasses list of ingress classes that the gateway will handle.
  ingressClasses:
    - graviteeio
  templates:
    404:
      ## @param ingress.templates.404.name Name of the config map storing the HTTP 404 ingress response template.
      name: ""
      ## @param ingress.templates.404.namespace Namespace of the config map storing the HTTP 404 ingress response template.     
      namespace: ""

gatewayAPI:
  controller:
    ## @param gatewayAPI.controller.enabled Set to true to enable experimental gateway api support.
    enabled: false

## @section HTTP Client
## @descriptionStart
## ðŸ‘Ž This section is deprecated and will be removed in version 1.0.0 The httpClient property
## should now be set under the manager section instead.
## @descriptionEnd
httpClient:
   ## @param httpClient.insecureSkipCertVerify see manager.httpClient.insecureSkipCertVerify
  insecureSkipCertVerify: false

dev:
  ## @skip dev.debug This is used by dev for debug only.
  debug:
    enabled: false
    port: 32767
