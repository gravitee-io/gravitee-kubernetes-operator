# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #         http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
{{- if .Values.dev.debug.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gko-controller-manager
  namespace: '{{ .Release.Namespace }}'
  labels:
    control-plane: controller-manager
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "helm.name" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    {{- if .Values.manager.labels}}
    {{- range $key, $value := .Values.manager.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
    {{- if .Values.common.labels}}
    {{- range $key, $value := .Values.common.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    app.kubernetes.io/name: {{ template "helm.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    checksum/config: '{{ include (print $.Template.BasePath "/manager/config.yaml") . | sha256sum }}'
    {{- if .Values.common.annotations}}
    {{- range $key, $value := .Values.common.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        checksum/config: '{{ include (print $.Template.BasePath "/manager/config.yaml") .
          | sha256sum }}'
        kubectl.kubernetes.io/default-container: manager
        {{- if .Values.manager.annotations}}
        {{- range $key, $value := .Values.manager.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.common.annotations}}
        {{- range $key, $value := .Values.common.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        control-plane: controller-manager
        {{- if .Values.manager.labels}}
        {{- range $key, $value := .Values.manager.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.common.labels}}
        {{- range $key, $value := .Values.common.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      containers:
        - name: manager
          envFrom:
            - configMapRef:
                name: '{{ .Values.manager.configMap.name }}'
                optional: true
          image: '{{ .Values.manager.image.repository }}:{{ default .Chart.Version .Values.manager.image.tag }}'
          imagePullPolicy: '{{ .Values.manager.image.pullPolicy }}'
          securityContext:
            allowPrivilegeEscalation: false
          {{- if .Values.manager.webhook.enabled }}
          volumeMounts:
            - mountPath: /tmp/webhook-server/certs/
              name: webhook-cert
              readOnly: true
          {{- end }}
      serviceAccountName: {{ template "rbac.serviceAccountName" . }}
      {{- if .Values.manager.webhook.enabled }}
      volumes:
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: {{ .Values.manager.webhook.cert.secret.name }}
      {{- end }}
      terminationGracePeriodSeconds: 10
{{- end }}
