# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apps/v1
kind: Deployment
metadata:    
  name: gko-controller-manager
  namespace: '{{ .Release.Namespace }}'
  labels:
    control-plane: controller-manager
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "helm.name" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    app.kubernetes.io/name: {{ template "helm.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    checksum/config: '{{ include (print $.Template.BasePath "/manager/config.yaml") . | sha256sum }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        checksum/config: '{{ include (print $.Template.BasePath "/manager/config.yaml") .
          | sha256sum }}'
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
{{- if and .Values.manager.metrics.enabled .Values.rbacProxy.enabled }}
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: '{{ .Values.rbacProxy.image.repository }}:{{ .Values.rbacProxy.image.tag }}'
          imagePullPolicy: '{{ .Values.rbacProxy.image.pullPolicy }}'
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          {{- with .Values.manager.resources }}
          resources:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
{{- end }}
        - args: []
          command:
            - /manager
          envFrom:
            - configMapRef:
                name: '{{ .Values.manager.configMap.name }}'
                optional: true
          image: '{{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag }}'
          imagePullPolicy: '{{ .Values.manager.image.pullPolicy }}'
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.manager.probe.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.manager.probe.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .Values.manager.resources }}
          resources:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - containerPort: {{ .Values.manager.webhook.service.port }}
              name: webhook-server
              protocol: TCP
{{- if .Values.manager.webhook.enabled }}  
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
{{- with .Values.manager.volumeMounts }}
{{-  . | toYaml | nindent 10 }}
{{- end }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ .Values.manager.webhook.cert.secret.name }}
{{- with .Values.manager.volumes }}
{{-  . | toYaml | nindent 6 }}
{{- end }}
{{- end }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ template "rbac.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
