{
	"info": {
		"_postman_id": "8d619329-8e72-4bbe-8a51-11b4e0ac63d5",
		"name": "Gravitee.io GKO - Management API Selected Endpoints",
		"description": "This is the OpenAPI specification used by Automation tools to perform calls to APIM Management API.\n\nContact Support:\n Email: team-gko@graviteesource.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27647659"
	},
	"item": [
		{
			"name": "organizations/{orgId}/environments/{envId}",
			"item": [
				{
					"name": "apis",
					"item": [
						{
							"name": "{apiId}",
							"item": [
								{
									"name": "Get one API",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												},
												{
													"key": "apiId",
													"value": "{{apiId}}",
													"description": "(Required) Id of an API."
												}
											]
										},
										"description": "Get one API using it's ID"
									},
									"response": [
										{
											"name": "Successful retrieval",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/:apiId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"apis",
														":apiId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "apiId",
															"value": "<string>",
															"description": "(Required) Id of an API."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"apiVersion\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"categories\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"crossId\": \"<string>\",\n  \"definitionVersion\": \"V4\",\n  \"deployedAt\": \"<dateTime>\",\n  \"deploymentState\": \"<string>\",\n  \"description\": \"<string>\",\n  \"disableMembershipNotifications\": false,\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"ad51\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"occaecat_1e6\": \"<string>\",\n        \"Duis_3\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"flows\": [\n    {\n      \"enabled\": true,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"selectors\": [\n        \"<object>\",\n        \"<object>\"\n      ],\n      \"connect\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"interact\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"publish\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"request\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"response\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"subscribe\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"enabled\": true,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"selectors\": [\n        \"<object>\",\n        \"<object>\"\n      ],\n      \"connect\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"interact\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"publish\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"request\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"response\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"subscribe\": [\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        },\n        {\n          \"enabled\": true,\n          \"condition\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"description\": \"<string>\",\n          \"messageCondition\": \"<string>\",\n          \"name\": \"<string>\",\n          \"policy\": \"<string>\"\n        }\n      ],\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"updatedAt\": \"<dateTime>\",\n  \"groups\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<string>\",\n  \"labels\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"primaryOwner\": {\n    \"id\": \"<string>\",\n    \"email\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"properties\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"encrypted\": \"<boolean>\",\n      \"dynamic\": \"<boolean>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"encrypted\": \"<boolean>\",\n      \"dynamic\": \"<boolean>\"\n    }\n  ],\n  \"resources\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ],\n  \"responseTemplates\": {\n    \"incididunt_e7\": {\n      \"nulla_61\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"pariatur_48d\": \"<string>\",\n          \"veniam73\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"incididuntc94\": {\n      \"magna_70e\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"minim_9\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"visibility\": \"<string>\",\n  \"originContext\": {\n    \"origin\": \"<string>\"\n  },\n  \"definitionContext\": \"<object>\",\n  \"workflowState\": \"<string>\",\n  \"_links\": {\n    \"pictureUrl\": \"<string>\",\n    \"backgroundUrl\": \"<string>\"\n  }\n}"
										},
										{
											"name": "No credential provided",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/:apiId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"apis",
														":apiId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "apiId",
															"value": "<string>",
															"description": "(Required) Id of an API."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong credentials",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/:apiId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"apis",
														":apiId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "apiId",
															"value": "<string>",
															"description": "(Required) Id of an API."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/:apiId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"apis",
														":apiId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "apiId",
															"value": "<string>",
															"description": "(Required) Id of an API."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes one API, and close plan by default",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/:apiId?closePlans=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												":apiId"
											],
											"query": [
												{
													"key": "closePlans",
													"value": "true",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												},
												{
													"key": "apiId",
													"value": "{{apiId}}",
													"description": "(Required) Id of an API."
												}
											]
										},
										"description": "Deletes one API, and close plan by default"
									},
									"response": [
										{
											"name": "API successfully deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/:apiId?closePlans=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "closePlans",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "apiId",
															"value": "<string>",
															"description": "(Required) Id of an API."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/:apiId?closePlans=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "closePlans",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "apiId",
															"value": "<string>",
															"description": "(Required) Id of an API."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"technicalCode\": \"<string>\",\n  \"parameters\": {\n    \"et_fa\": \"<string>\",\n    \"sint_f\": \"<string>\"\n  },\n  \"details\": [\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    },\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Search for APIs of a given type",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"definitionVersion\":\"V4\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_search?page=1&perPage=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":orgId",
										"environments",
										":envId",
										"apis",
										"_search"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number for pagination."
										},
										{
											"key": "perPage",
											"value": "10",
											"description": "The number of items per page for pagination.\n"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an organization."
										},
										{
											"key": "envId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an environment."
										}
									]
								},
								"description": "Search for APIs of a given type"
							},
							"response": [
								{
									"name": "Page of apis",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"definitionVersion\": \"V4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_search?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_search"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"apiVersion\": \"<string>\",\n      \"analytics\": {\n        \"enabled\": true,\n        \"logging\": {\n          \"condition\": \"<string>\",\n          \"content\": {\n            \"headers\": \"<boolean>\",\n            \"messageHeaders\": \"<boolean>\",\n            \"messageMetadata\": \"<boolean>\",\n            \"messagePayload\": \"<boolean>\",\n            \"payload\": \"<boolean>\"\n          },\n          \"messageCondition\": \"<string>\",\n          \"mode\": {\n            \"endpoint\": \"<boolean>\",\n            \"entrypoint\": \"<boolean>\"\n          },\n          \"phase\": {\n            \"request\": \"<boolean>\",\n            \"response\": \"<boolean>\"\n          }\n        },\n        \"sampling\": {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        \"tracing\": {\n          \"enabled\": \"<boolean>\",\n          \"verbose\": \"<boolean>\"\n        }\n      },\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"createdAt\": \"<dateTime>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"deployedAt\": \"<dateTime>\",\n      \"deploymentState\": \"<string>\",\n      \"description\": \"<string>\",\n      \"disableMembershipNotifications\": false,\n      \"endpointGroups\": [\n        {\n          \"name\": \"<string>\",\n          \"headers\": {\n            \"in_a\": \"<string>\",\n            \"nostrud18e\": \"<string>\"\n          },\n          \"http\": {\n            \"followRedirects\": false,\n            \"pipelining\": false,\n            \"useCompression\": false,\n            \"clearTextUpgrade\": true,\n            \"connectTimeout\": \"<long>\",\n            \"idleTimeout\": \"<long>\",\n            \"keepAlive\": true,\n            \"keepAliveTimeout\": 30000,\n            \"maxConcurrentConnections\": \"<integer>\",\n            \"propagateClientAcceptEncoding\": false,\n            \"readTimeout\": \"<long>\",\n            \"version\": \"HTTP_1_1\"\n          },\n          \"loadBalancer\": {\n            \"type\": \"ROUND_ROBIN\"\n          },\n          \"services\": {\n            \"discovery\": {\n              \"enabled\": \"<boolean>\",\n              \"overrideConfiguration\": \"<boolean>\",\n              \"configuration\": \"<object>\",\n              \"type\": \"<string>\"\n            },\n            \"healthCheck\": {\n              \"enabled\": \"<boolean>\",\n              \"overrideConfiguration\": \"<boolean>\",\n              \"configuration\": \"<object>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"sharedConfiguration\": \"<object>\",\n          \"ssl\": {\n            \"hostnameVerifier\": true,\n            \"trustAll\": false,\n            \"keyStore\": {\n              \"certContent\": \"<string>\",\n              \"certPath\": \"<string>\",\n              \"content\": \"<string>\",\n              \"keyContent\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"password\": \"<string>\",\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            \"trustStore\": {\n              \"content\": \"<string>\",\n              \"password\": \"<string>\",\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"headers\": {\n            \"elit6\": \"<string>\",\n            \"dolorb7e\": \"<string>\"\n          },\n          \"http\": {\n            \"followRedirects\": false,\n            \"pipelining\": false,\n            \"useCompression\": false,\n            \"clearTextUpgrade\": true,\n            \"connectTimeout\": \"<long>\",\n            \"idleTimeout\": \"<long>\",\n            \"keepAlive\": true,\n            \"keepAliveTimeout\": 30000,\n            \"maxConcurrentConnections\": \"<integer>\",\n            \"propagateClientAcceptEncoding\": false,\n            \"readTimeout\": \"<long>\",\n            \"version\": \"HTTP_1_1\"\n          },\n          \"loadBalancer\": {\n            \"type\": \"ROUND_ROBIN\"\n          },\n          \"services\": {\n            \"discovery\": {\n              \"enabled\": \"<boolean>\",\n              \"overrideConfiguration\": \"<boolean>\",\n              \"configuration\": \"<object>\",\n              \"type\": \"<string>\"\n            },\n            \"healthCheck\": {\n              \"enabled\": \"<boolean>\",\n              \"overrideConfiguration\": \"<boolean>\",\n              \"configuration\": \"<object>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"sharedConfiguration\": \"<object>\",\n          \"ssl\": {\n            \"hostnameVerifier\": true,\n            \"trustAll\": false,\n            \"keyStore\": {\n              \"certContent\": \"<string>\",\n              \"certPath\": \"<string>\",\n              \"content\": \"<string>\",\n              \"keyContent\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"password\": \"<string>\",\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            \"trustStore\": {\n              \"content\": \"<string>\",\n              \"password\": \"<string>\",\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"type\": \"<string>\"\n        }\n      ],\n      \"failover\": {\n        \"enabled\": false,\n        \"maxFailures\": 5,\n        \"maxRetries\": 2,\n        \"openStateDuration\": 10000,\n        \"perSubscription\": true,\n        \"slowCallDuration\": 2000\n      },\n      \"flowExecution\": {\n        \"matchRequired\": \"<boolean>\",\n        \"mode\": \"<string>\"\n      },\n      \"flows\": [\n        {\n          \"enabled\": true,\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"selectors\": [\n            \"<object>\",\n            \"<object>\"\n          ],\n          \"connect\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"interact\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"publish\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"request\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"response\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"subscribe\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"enabled\": true,\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"selectors\": [\n            \"<object>\",\n            \"<object>\"\n          ],\n          \"connect\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"interact\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"publish\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"request\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"response\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"subscribe\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"updatedAt\": \"<dateTime>\",\n      \"groups\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"id\": \"<string>\",\n      \"labels\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lifecycleState\": \"UNPUBLISHED\",\n      \"listeners\": [\n        \"<object>\"\n      ],\n      \"name\": \"<string>\",\n      \"primaryOwner\": {\n        \"id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"properties\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"encrypted\": \"<boolean>\",\n          \"dynamic\": \"<boolean>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"encrypted\": \"<boolean>\",\n          \"dynamic\": \"<boolean>\"\n        }\n      ],\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"enabled\": \"<boolean>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"enabled\": \"<boolean>\"\n        }\n      ],\n      \"responseTemplates\": {\n        \"commodo0f\": {\n          \"dolor54f\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"sunt_a3\": \"<string>\",\n              \"fugiat39\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          },\n          \"exercitation_847\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"ex_8f\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          },\n          \"non_a2\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"in_8d\": \"<string>\",\n              \"in_684\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          }\n        },\n        \"minim9\": {\n          \"cupidatat_e7\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"utc\": \"<string>\",\n              \"enim_c2_\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          },\n          \"qui_f\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"nostrud1\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          }\n        },\n        \"ullamco_51_\": {\n          \"est_93\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"ut8_9\": \"<string>\",\n              \"sitebf\": \"<string>\",\n              \"sed0c4\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          },\n          \"elit470\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"temporfe\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          },\n          \"veniam_6f\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"sitcc_\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          }\n        },\n        \"animc9d\": {\n          \"mollit_c\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"cillum4\": \"<string>\",\n              \"sit_90\": \"<string>\",\n              \"laboris3d\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          }\n        }\n      },\n      \"services\": {\n        \"dynamicProperty\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"state\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": \"<string>\",\n      \"version\": \"<string>\",\n      \"visibility\": \"<string>\",\n      \"originContext\": {\n        \"origin\": \"<string>\"\n      },\n      \"definitionContext\": \"<object>\",\n      \"workflowState\": \"<string>\",\n      \"_links\": {\n        \"pictureUrl\": \"<string>\",\n        \"backgroundUrl\": \"<string>\"\n      }\n    },\n    {\n      \"apiVersion\": \"<string>\",\n      \"analytics\": {\n        \"enabled\": true,\n        \"logging\": {\n          \"condition\": \"<string>\",\n          \"content\": {\n            \"headers\": \"<boolean>\",\n            \"messageHeaders\": \"<boolean>\",\n            \"messageMetadata\": \"<boolean>\",\n            \"messagePayload\": \"<boolean>\",\n            \"payload\": \"<boolean>\"\n          },\n          \"messageCondition\": \"<string>\",\n          \"mode\": {\n            \"endpoint\": \"<boolean>\",\n            \"entrypoint\": \"<boolean>\"\n          },\n          \"phase\": {\n            \"request\": \"<boolean>\",\n            \"response\": \"<boolean>\"\n          }\n        },\n        \"sampling\": {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        \"tracing\": {\n          \"enabled\": \"<boolean>\",\n          \"verbose\": \"<boolean>\"\n        }\n      },\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"createdAt\": \"<dateTime>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"deployedAt\": \"<dateTime>\",\n      \"deploymentState\": \"<string>\",\n      \"description\": \"<string>\",\n      \"disableMembershipNotifications\": false,\n      \"endpointGroups\": [\n        {\n          \"name\": \"<string>\",\n          \"headers\": {\n            \"Loremdc\": \"<string>\",\n            \"aliqua_8a\": \"<string>\",\n            \"ad_594\": \"<string>\"\n          },\n          \"http\": {\n            \"followRedirects\": false,\n            \"pipelining\": false,\n            \"useCompression\": false,\n            \"clearTextUpgrade\": true,\n            \"connectTimeout\": \"<long>\",\n            \"idleTimeout\": \"<long>\",\n            \"keepAlive\": true,\n            \"keepAliveTimeout\": 30000,\n            \"maxConcurrentConnections\": \"<integer>\",\n            \"propagateClientAcceptEncoding\": false,\n            \"readTimeout\": \"<long>\",\n            \"version\": \"HTTP_1_1\"\n          },\n          \"loadBalancer\": {\n            \"type\": \"ROUND_ROBIN\"\n          },\n          \"services\": {\n            \"discovery\": {\n              \"enabled\": \"<boolean>\",\n              \"overrideConfiguration\": \"<boolean>\",\n              \"configuration\": \"<object>\",\n              \"type\": \"<string>\"\n            },\n            \"healthCheck\": {\n              \"enabled\": \"<boolean>\",\n              \"overrideConfiguration\": \"<boolean>\",\n              \"configuration\": \"<object>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"sharedConfiguration\": \"<object>\",\n          \"ssl\": {\n            \"hostnameVerifier\": true,\n            \"trustAll\": false,\n            \"keyStore\": {\n              \"certContent\": \"<string>\",\n              \"certPath\": \"<string>\",\n              \"content\": \"<string>\",\n              \"keyContent\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"password\": \"<string>\",\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            \"trustStore\": {\n              \"content\": \"<string>\",\n              \"password\": \"<string>\",\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"type\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"headers\": {\n            \"irure3\": \"<string>\",\n            \"deserunt_e5\": \"<string>\",\n            \"eiusmodf\": \"<string>\"\n          },\n          \"http\": {\n            \"followRedirects\": false,\n            \"pipelining\": false,\n            \"useCompression\": false,\n            \"clearTextUpgrade\": true,\n            \"connectTimeout\": \"<long>\",\n            \"idleTimeout\": \"<long>\",\n            \"keepAlive\": true,\n            \"keepAliveTimeout\": 30000,\n            \"maxConcurrentConnections\": \"<integer>\",\n            \"propagateClientAcceptEncoding\": false,\n            \"readTimeout\": \"<long>\",\n            \"version\": \"HTTP_1_1\"\n          },\n          \"loadBalancer\": {\n            \"type\": \"ROUND_ROBIN\"\n          },\n          \"services\": {\n            \"discovery\": {\n              \"enabled\": \"<boolean>\",\n              \"overrideConfiguration\": \"<boolean>\",\n              \"configuration\": \"<object>\",\n              \"type\": \"<string>\"\n            },\n            \"healthCheck\": {\n              \"enabled\": \"<boolean>\",\n              \"overrideConfiguration\": \"<boolean>\",\n              \"configuration\": \"<object>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"sharedConfiguration\": \"<object>\",\n          \"ssl\": {\n            \"hostnameVerifier\": true,\n            \"trustAll\": false,\n            \"keyStore\": {\n              \"certContent\": \"<string>\",\n              \"certPath\": \"<string>\",\n              \"content\": \"<string>\",\n              \"keyContent\": \"<string>\",\n              \"keyPath\": \"<string>\",\n              \"password\": \"<string>\",\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            },\n            \"trustStore\": {\n              \"content\": \"<string>\",\n              \"password\": \"<string>\",\n              \"path\": \"<string>\",\n              \"type\": \"<string>\"\n            }\n          },\n          \"type\": \"<string>\"\n        }\n      ],\n      \"failover\": {\n        \"enabled\": false,\n        \"maxFailures\": 5,\n        \"maxRetries\": 2,\n        \"openStateDuration\": 10000,\n        \"perSubscription\": true,\n        \"slowCallDuration\": 2000\n      },\n      \"flowExecution\": {\n        \"matchRequired\": \"<boolean>\",\n        \"mode\": \"<string>\"\n      },\n      \"flows\": [\n        {\n          \"enabled\": true,\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"selectors\": [\n            \"<object>\",\n            \"<object>\"\n          ],\n          \"connect\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"interact\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"publish\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"request\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"response\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"subscribe\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"enabled\": true,\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"selectors\": [\n            \"<object>\",\n            \"<object>\"\n          ],\n          \"connect\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"interact\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"publish\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"request\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"response\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"subscribe\": [\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"enabled\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"condition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"configuration\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"description\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"messageCondition\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"policy\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"tags\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"updatedAt\": \"<dateTime>\",\n      \"groups\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"id\": \"<string>\",\n      \"labels\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"lifecycleState\": \"UNPUBLISHED\",\n      \"listeners\": [\n        \"<object>\"\n      ],\n      \"name\": \"<string>\",\n      \"primaryOwner\": {\n        \"id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"properties\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"encrypted\": \"<boolean>\",\n          \"dynamic\": \"<boolean>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"encrypted\": \"<boolean>\",\n          \"dynamic\": \"<boolean>\"\n        }\n      ],\n      \"resources\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"enabled\": \"<boolean>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"configuration\": \"<object>\",\n          \"enabled\": \"<boolean>\"\n        }\n      ],\n      \"responseTemplates\": {\n        \"Excepteurbd\": {\n          \"commodo9\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"exercitation_c\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          }\n        },\n        \"irure_ad9\": {\n          \"sint_d6\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"deserunt1_\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          }\n        },\n        \"in_2\": {\n          \"sunt0\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"in_d35\": \"<string>\",\n              \"adipisicingc\": \"<string>\",\n              \"nulla9c4\": \"<string>\",\n              \"anim5\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          },\n          \"exe\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"amet_8_3\": \"<string>\",\n              \"ex4\": \"<string>\",\n              \"esse_7cb\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          }\n        },\n        \"cupidatat_fe\": {\n          \"reprehenderit82a\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"magna_0\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          },\n          \"incididunt1\": {\n            \"statusCode\": \"<integer>\",\n            \"headers\": {\n              \"officia3\": \"<string>\",\n              \"adipisicing_530\": \"<string>\"\n            },\n            \"body\": \"<string>\",\n            \"propagateErrorKeyToLogs\": \"<boolean>\"\n          }\n        }\n      },\n      \"services\": {\n        \"dynamicProperty\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"state\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": \"<string>\",\n      \"version\": \"<string>\",\n      \"visibility\": \"<string>\",\n      \"originContext\": {\n        \"origin\": \"<string>\"\n      },\n      \"definitionContext\": \"<object>\",\n      \"workflowState\": \"<string>\",\n      \"_links\": {\n        \"pictureUrl\": \"<string>\",\n        \"backgroundUrl\": \"<string>\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"page\": \"<integer>\",\n    \"perPage\": \"<integer>\",\n    \"pageCount\": \"<integer>\",\n    \"pageItemsCount\": \"<integer>\",\n    \"totalCount\": \"<long>\"\n  },\n  \"links\": {\n    \"self\": \"<string>\",\n    \"first\": \"<string>\",\n    \"last\": \"<string>\",\n    \"previous\": \"<string>\",\n    \"next\": \"<string>\"\n  }\n}"
								},
								{
									"name": "No credential provided",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"definitionVersion\": \"V4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_search?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_search"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Wrong credentials",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"definitionVersion\": \"V4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_search?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_search"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"definitionVersion\": \"V4\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_search?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_search"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create or update a V4 API from V4 CRD Spec",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Get 'id' field from the response\", function () {",
											"    const responseBody = pm.response.json();",
											"    pm.expect(responseBody.id).to.exist;",
											"    pm.collectionVariables.set(\"apiId\", responseBody.id)",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"crossId\": \"{{$guid}}\",\n    \"name\":\"{{$randomFullName}}\",\n    \"description\": \"API v4 managed by Gravitee Kubernetes Operator\",\n    \"version\": \"1.0\",\n    \"type\": \"PROXY\",\n    \"listeners\": [\n        {\n            \"type\": \"HTTP\",\n            \"paths\": [\n                {\n                    \"path\": \"/echo-v4\"\n                }\n            ],\n            \"entrypoints\": [\n                {\n                    \"type\": \"http-proxy\",\n                    \"qos\": \"AUTO\"\n                }\n            ]\n        }\n    ],\n    \"endpointGroups\": [\n        {\n            \"name\": \"Default HTTP proxy group\",\n            \"type\": \"http-proxy\",\n            \"endpoints\": [\n                {\n                    \"name\": \"Default HTTP proxy\",\n                    \"type\": \"http-proxy\",\n                    \"inheritConfiguration\": false,\n                    \"configuration\": {\n                        \"target\": \"https://api.gravitee.io/echo\"\n                    },\n                    \"secondary\": false\n                }\n            ]\n        }\n    ],\n    \"analytics\": {\n        \"enabled\": false\n    },\n    \"definitionContext\": {\n        \"origin\": \"KUBERNETES\",\n        \"syncFrom\": \"MANAGEMENT\"\n    },\n    \"definitionVersion\": \"V4\",\n    \"failover\": {\n        \"enabled\": false\n    },\n    \"lifecycleState\": \"PUBLISHED\",\n    \"notifyMembers\": true,\n    \"flowExecution\": {\n        \"mode\": \"DEFAULT\",\n        \"matchRequired\": false\n    },\n    \"plans\": {\n        \"KeyLess\": {\n            \"id\": \"{{$guid}}\",\n            \"name\": \"Free plan\",\n            \"type\": \"API\",\n            \"mode\": \"STANDARD\",\n            \"status\": \"PUBLISHED\",\n            \"validation\": \"AUTO\",\n            \"description\": \"This plan does not require any authentication\",\n            \"security\": {\n                \"type\": \"KEY_LESS\"\n            }\n        }\n    },\n    \"state\": \"STARTED\",\n    \"visibility\": \"PRIVATE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":orgId",
										"environments",
										":envId",
										"apis",
										"_import",
										"crd"
									],
									"query": [
										{
											"key": "dryRun",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an organization."
										},
										{
											"key": "envId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an environment."
										}
									]
								},
								"description": "Create or update a V4 API from V4 CRD Spec"
							},
							"response": [
								{
									"name": "Status of API successfully created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"crossId\": \"<string>\",\n  \"environmentId\": \"<string>\",\n  \"errors\": {\n    \"severe\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"warning\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"plans\": {\n    \"elitb\": \"<string>\"\n  },\n  \"processingStatus\": \"<string>\",\n  \"state\": \"<string>\",\n  \"subscriptions\": \"<integer>\"\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"technicalCode\": \"<string>\",\n  \"parameters\": {\n    \"Lorem8\": \"<string>\",\n    \"fugiat_b2\": \"<string>\"\n  },\n  \"details\": [\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    },\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "No credential provided",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Wrong credentials",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create or update a V4 API from V4 CRD Spec (SPG)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Get 'id' field from the response\", function () {",
											"    const responseBody = pm.response.json();",
											"    pm.expect(responseBody.id).to.exist;",
											"    pm.collectionVariables.set(\"apiId\", responseBody.id)",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"crossId\": \"{{$guid}}\",\n    \"name\": \"{{$randomFullName}}\",\n    \"description\": \"API v4 managed by Gravitee Kubernetes Operator\",\n    \"version\": \"1.0\",\n    \"type\": \"PROXY\",\n    \"listeners\": [\n        {\n            \"type\": \"HTTP\",\n            \"paths\": [\n                {\n                    \"path\": \"/echo-v4-spg\"\n                }\n            ],\n            \"entrypoints\": [\n                {\n                    \"type\": \"http-proxy\",\n                    \"qos\": \"AUTO\"\n                }\n            ]\n        }\n    ],\n    \"endpointGroups\": [\n        {\n            \"name\": \"Default HTTP proxy group\",\n            \"type\": \"http-proxy\",\n            \"endpoints\": [\n                {\n                    \"name\": \"Default HTTP proxy\",\n                    \"type\": \"http-proxy\",\n                    \"inheritConfiguration\": false,\n                    \"configuration\": {\n                        \"target\": \"https://api.gravitee.io/echo\"\n                    },\n                    \"secondary\": false\n                }\n            ]\n        }\n    ],\n    \"analytics\": {\n        \"enabled\": false\n    },\n    \"definitionContext\": {\n        \"origin\": \"KUBERNETES\",\n        \"syncFrom\": \"MANAGEMENT\"\n    },\n    \"definitionVersion\": \"V4\",\n    \"failover\": {\n        \"enabled\": false\n    },\n    \"lifecycleState\": \"PUBLISHED\",\n    \"notifyMembers\": true,\n    \"flowExecution\": {\n        \"mode\": \"DEFAULT\",\n        \"matchRequired\": false\n    },\n    \"flows\": [\n        {\n            \"enabled\": true,\n            \"selectors\": [\n                {\n                    \"type\": \"HTTP\",\n                    \"path\":\"/\",\n                    \"pathOperator\": \"STARTS_WITH\"\n                }\n            ],\n            \"request\": [\n                {\n                    \"enabled\": \"true\",\n                    \"name\": \"SPG\",\n                    \"policy\": \"shared-policy-group-policy\",\n                    \"configuration\": {\n                        \"sharedPolicyGroupId\": \"{{spgCrossId}}\"\n                    }\n                }\n            ]\n        }\n    ],\n    \"plans\": {\n        \"KeyLess\": {\n            \"id\": \"{{$guid}}\",\n            \"name\": \"Free plan\",\n            \"type\": \"API\",\n            \"mode\": \"STANDARD\",\n            \"validation\": \"AUTO\",\n            \"status\": \"PUBLISHED\",\n            \"description\": \"This plan does not require any authentication\",\n            \"security\": {\n                \"type\": \"KEY_LESS\"\n            }\n        }\n    },\n    \"state\": \"STARTED\",\n    \"visibility\": \"PRIVATE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":orgId",
										"environments",
										":envId",
										"apis",
										"_import",
										"crd"
									],
									"query": [
										{
											"key": "dryRun",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an organization."
										},
										{
											"key": "envId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an environment."
										}
									]
								},
								"description": "Create or update a V4 API from V4 CRD Spec"
							},
							"response": [
								{
									"name": "Status of API successfully created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"crossId\": \"<string>\",\n  \"environmentId\": \"<string>\",\n  \"errors\": {\n    \"severe\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"warning\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"plans\": {\n    \"elitb\": \"<string>\"\n  },\n  \"processingStatus\": \"<string>\",\n  \"state\": \"<string>\",\n  \"subscriptions\": \"<integer>\"\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"technicalCode\": \"<string>\",\n  \"parameters\": {\n    \"Lorem8\": \"<string>\",\n    \"fugiat_b2\": \"<string>\"\n  },\n  \"details\": [\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    },\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "No credential provided",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Wrong credentials",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpointGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"headers\": {\n        \"esse95\": \"<string>\"\n      },\n      \"http\": {\n        \"followRedirects\": false,\n        \"pipelining\": false,\n        \"useCompression\": false,\n        \"clearTextUpgrade\": true,\n        \"connectTimeout\": \"<long>\",\n        \"idleTimeout\": \"<long>\",\n        \"keepAlive\": true,\n        \"keepAliveTimeout\": 30000,\n        \"maxConcurrentConnections\": \"<integer>\",\n        \"propagateClientAcceptEncoding\": false,\n        \"readTimeout\": \"<long>\",\n        \"version\": \"HTTP_1_1\"\n      },\n      \"loadBalancer\": {\n        \"type\": \"ROUND_ROBIN\"\n      },\n      \"services\": {\n        \"discovery\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        },\n        \"healthCheck\": {\n          \"enabled\": \"<boolean>\",\n          \"overrideConfiguration\": \"<boolean>\",\n          \"configuration\": \"<object>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"sharedConfiguration\": \"<object>\",\n      \"ssl\": {\n        \"hostnameVerifier\": true,\n        \"trustAll\": false,\n        \"keyStore\": {\n          \"certContent\": \"<string>\",\n          \"certPath\": \"<string>\",\n          \"content\": \"<string>\",\n          \"keyContent\": \"<string>\",\n          \"keyPath\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        },\n        \"trustStore\": {\n          \"content\": \"<string>\",\n          \"password\": \"<string>\",\n          \"path\": \"<string>\",\n          \"type\": \"<string>\"\n        }\n      },\n      \"type\": \"<string>\"\n    }\n  ],\n  \"listeners\": [\n    \"<object>\"\n  ],\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"version\": \"<string>\",\n  \"analytics\": {\n    \"enabled\": true,\n    \"logging\": {\n      \"condition\": \"<string>\",\n      \"content\": {\n        \"headers\": \"<boolean>\",\n        \"messageHeaders\": \"<boolean>\",\n        \"messageMetadata\": \"<boolean>\",\n        \"messagePayload\": \"<boolean>\",\n        \"payload\": \"<boolean>\"\n      },\n      \"messageCondition\": \"<string>\",\n      \"mode\": {\n        \"endpoint\": \"<boolean>\",\n        \"entrypoint\": \"<boolean>\"\n      },\n      \"phase\": {\n        \"request\": \"<boolean>\",\n        \"response\": \"<boolean>\"\n      }\n    },\n    \"sampling\": {\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    \"tracing\": {\n      \"enabled\": \"<boolean>\",\n      \"verbose\": \"<boolean>\"\n    }\n  },\n  \"crossId\": \"<string>\",\n  \"definitionContext\": {\n    \"origin\": \"KUBERNETES\",\n    \"syncFrom\": \"MANAGEMENT\"\n  },\n  \"definitionVersion\": \"V4\",\n  \"failover\": {\n    \"enabled\": false,\n    \"maxFailures\": 5,\n    \"maxRetries\": 2,\n    \"openStateDuration\": 10000,\n    \"perSubscription\": true,\n    \"slowCallDuration\": 2000\n  },\n  \"flowExecution\": {\n    \"matchRequired\": \"<boolean>\",\n    \"mode\": \"<string>\"\n  },\n  \"id\": \"<string>\",\n  \"lifecycleState\": \"UNPUBLISHED\",\n  \"members\": [\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    },\n    {\n      \"source\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"role\": \"USER\"\n    }\n  ],\n  \"notifyMembers\": true,\n  \"pages\": {\n    \"ad_\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"sed_1ac\": \"<string>\",\n        \"fugiat7\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    },\n    \"sit2\": {\n      \"type\": \"<string>\",\n      \"api\": \"<string>\",\n      \"configuration\": {\n        \"magnaba\": \"<string>\",\n        \"sitd0\": \"<string>\"\n      },\n      \"content\": \"<string>\",\n      \"crossId\": \"<string>\",\n      \"homepage\": false,\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"order\": \"<long>\",\n      \"parent\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"published\": false,\n      \"source\": {\n        \"configuration\": \"<object>\",\n        \"type\": \"<string>\"\n      },\n      \"visibility\": \"PUBLIC\"\n    }\n  },\n  \"plans\": {\n    \"enimea\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"do0\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    },\n    \"Excepteur_73\": {\n      \"name\": \"<string>\",\n      \"characteristics\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"comment_required\": \"<boolean>\",\n      \"crossId\": \"<string>\",\n      \"definitionVersion\": \"V4\",\n      \"description\": \"<string>\",\n      \"generalConditions\": \"<string>\",\n      \"id\": \"<string>\",\n      \"mode\": \"STANDARD\",\n      \"order\": \"<integer>\",\n      \"security\": {\n        \"type\": \"<string>\",\n        \"configuration\": \"<object>\"\n      },\n      \"selectionRule\": \"<string>\",\n      \"status\": \"PUBLISHED\",\n      \"type\": \"API\",\n      \"validation\": \"AUTO\"\n    }\n  },\n  \"responseTemplates\": {\n    \"aliquad\": {\n      \"fugiat8\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"magna_65b\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"minim03\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"nisi_d\": \"<string>\",\n          \"adipisicing_3c\": \"<string>\",\n          \"in3\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"culpa_fc\": {\n      \"ullamco_2\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"dolore32\": \"<string>\",\n          \"officia_c8\": \"<string>\",\n          \"amet_2\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    },\n    \"Excepteurd\": {\n      \"incididunt_3\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"laboris_f5\": \"<string>\",\n          \"Excepteur13\": \"<string>\",\n          \"aute_6d5\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"culpa99\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"veniam994\": \"<string>\",\n          \"incididunt_726\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"sit_19d\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"Lorem_d1\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      },\n      \"laborum_f\": {\n        \"statusCode\": \"<integer>\",\n        \"headers\": {\n          \"ipsumd33\": \"<string>\",\n          \"ipsum_6d0\": \"<string>\"\n        },\n        \"body\": \"<string>\",\n        \"propagateErrorKeyToLogs\": \"<boolean>\"\n      }\n    }\n  },\n  \"services\": {\n    \"dynamicProperty\": {\n      \"enabled\": \"<boolean>\",\n      \"overrideConfiguration\": \"<boolean>\",\n      \"configuration\": \"<object>\",\n      \"type\": \"<string>\"\n    }\n  },\n  \"state\": \"STARTED\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"visibility\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/apis/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"apis",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "shared-policy-groups",
					"item": [
						{
							"name": "{spgId}",
							"item": [
								{
									"name": "Get one policy group",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/:spgId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups",
												":spgId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												},
												{
													"key": "spgId",
													"value": "{{spgId}}",
													"description": "(Required) Id of a Shared Policy Group."
												}
											]
										},
										"description": "Get one policy group"
									},
									"response": [
										{
											"name": "Successful retrieval",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/:spgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"shared-policy-groups",
														":spgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "spgId",
															"value": "<string>",
															"description": "(Required) Id of a Shared Policy Group."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"apiType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"phase\": \"<string>\",\n  \"crossId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"prerequisiteMessage\": \"<string>\",\n  \"steps\": [\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    },\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "No credential provided",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/:spgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"shared-policy-groups",
														":spgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "spgId",
															"value": "<string>",
															"description": "(Required) Id of a Shared Policy Group."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong credentials",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/:spgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"shared-policy-groups",
														":spgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "spgId",
															"value": "<string>",
															"description": "(Required) Id of a Shared Policy Group."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/:spgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"shared-policy-groups",
														":spgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "spgId",
															"value": "<string>",
															"description": "(Required) Id of a Shared Policy Group."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete one policy group",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/:spgId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups",
												":spgId"
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												},
												{
													"key": "spgId",
													"value": "{{spgId}}"
												}
											]
										},
										"description": "Delete one policy group"
									},
									"response": [
										{
											"name": "Shared Policy Group successfully deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/:spgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"shared-policy-groups",
														":spgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "spgId",
															"value": "<string>",
															"description": "(Required) Id of a Shared Policy Group."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/:spgId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":orgId",
														"environments",
														":envId",
														"shared-policy-groups",
														":spgId"
													],
													"variable": [
														{
															"key": "orgId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an organization."
														},
														{
															"key": "envId",
															"value": "DEFAULT",
															"description": "(Required) Id or Hrid (Human readable Id) of an environment."
														},
														{
															"key": "spgId",
															"value": "<string>",
															"description": "(Required) Id of a Shared Policy Group."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"technicalCode\": \"<string>\",\n  \"parameters\": {\n    \"Lorem8\": \"<string>\",\n    \"fugiat_b2\": \"<string>\"\n  },\n  \"details\": [\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    },\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get pagineted policy groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups?page=1&perPage=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":orgId",
										"environments",
										":envId",
										"shared-policy-groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page number for pagination."
										},
										{
											"key": "perPage",
											"value": "10",
											"description": "The number of items per page for pagination.\n"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an organization."
										},
										{
											"key": "envId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an environment."
										}
									]
								},
								"description": "Get pagineted policy groups"
							},
							"response": [
								{
									"name": "Page of shared policy groups",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"pagination\": {\n    \"page\": \"<integer>\",\n    \"perPage\": \"<integer>\",\n    \"pageCount\": \"<integer>\",\n    \"pageItemsCount\": \"<integer>\",\n    \"totalCount\": \"<long>\"\n  },\n  \"links\": {\n    \"self\": \"<string>\",\n    \"first\": \"<string>\",\n    \"last\": \"<string>\",\n    \"previous\": \"<string>\",\n    \"next\": \"<string>\"\n  }\n}"
								},
								{
									"name": "No credential provided",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Wrong credentials",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups?page=1&perPage=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "10"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"technicalCode\": \"<string>\",\n  \"parameters\": {\n    \"Lorem8\": \"<string>\",\n    \"fugiat_b2\": \"<string>\"\n  },\n  \"details\": [\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    },\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create or update Shared Policy Group from CRD Spec",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"pm.collectionVariables.set('spgCrossId', jsonData.crossId);",
											"pm.collectionVariables.set('spgId', jsonData.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiType\": \"PROXY\",\n  \"crossId\": \"{{$guid}}\",\n  \"name\": \"{{$randomFullName}}\",\n  \"phase\": \"REQUEST\",\n  \"steps\": [\n    {\n      \"enabled\": true,\n      \"name\": \"add context path header\",\n      \"policy\": \"transform-headers\",\n      \"configuration\": {\n        \"addHeaders\": [\n            {\n                \"name\":\"X-Context-Path\", \n                \"value\": \"{#request.contextPath}\"\n            }\n        ]\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/_import/crd?dryRun=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":orgId",
										"environments",
										":envId",
										"shared-policy-groups",
										"_import",
										"crd"
									],
									"query": [
										{
											"key": "dryRun",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an organization."
										},
										{
											"key": "envId",
											"value": "DEFAULT",
											"description": "(Required) Id or Hrid (Human readable Id) of an environment."
										}
									]
								},
								"description": "Create or update Shared Policy Group from CRD Spec"
							},
							"response": [
								{
									"name": "Status of Shared Policy Group successfully created",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"phase\": \"<string>\",\n  \"crossId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"prerequisiteMessage\": \"<string>\",\n  \"steps\": [\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    },\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"crossId\": \"<string>\",\n  \"environmentId\": \"<string>\",\n  \"errors\": {\n    \"severe\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"warning\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"plans\": {\n    \"elitb\": \"<string>\"\n  },\n  \"processingStatus\": \"<string>\",\n  \"state\": \"<string>\",\n  \"subscriptions\": \"<integer>\"\n}"
								},
								{
									"name": "Validation error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"phase\": \"<string>\",\n  \"crossId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"prerequisiteMessage\": \"<string>\",\n  \"steps\": [\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    },\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": \"<integer>\",\n  \"message\": \"<string>\",\n  \"technicalCode\": \"<string>\",\n  \"parameters\": {\n    \"Lorem8\": \"<string>\",\n    \"fugiat_b2\": \"<string>\"\n  },\n  \"details\": [\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    },\n    {\n      \"message\": \"<string>\",\n      \"location\": \"<string>\",\n      \"invalidValue\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "No credential provided",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"phase\": \"<string>\",\n  \"crossId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"prerequisiteMessage\": \"<string>\",\n  \"steps\": [\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    },\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Wrong credentials",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"phase\": \"<string>\",\n  \"crossId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"prerequisiteMessage\": \"<string>\",\n  \"steps\": [\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    },\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"phase\": \"<string>\",\n  \"crossId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"prerequisiteMessage\": \"<string>\",\n  \"steps\": [\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    },\n    {\n      \"enabled\": true,\n      \"condition\": \"<string>\",\n      \"configuration\": \"<object>\",\n      \"description\": \"<string>\",\n      \"messageCondition\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:orgId/environments/:envId/shared-policy-groups/_import/crd?dryRun=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":orgId",
												"environments",
												":envId",
												"shared-policy-groups",
												"_import",
												"crd"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "orgId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an organization."
												},
												{
													"key": "envId",
													"value": "DEFAULT",
													"description": "(Required) Id or Hrid (Human readable Id) of an environment."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "admin",
						"type": "string"
					},
					{
						"key": "username",
						"value": "admin",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "htto://localhost:8083/management/v2",
			"type": "string"
		},
		{
			"key": "apiId",
			"value": ""
		},
		{
			"key": "spgId",
			"value": ""
		},
		{
			"key": "spgCrossId",
			"value": ""
		}
	]
}